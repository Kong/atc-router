---
name: Release

on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches:
    - main

env:
  DESTDIR: /tmp/build
  LUA_LIB_DIR: /usr/local/openresty/lualib

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.release.outputs.published }}
      release-git-tag: ${{ steps.release.outputs.release-git-tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Release
      id: release
      uses: ahmadnassri/action-semantic-release@v2.1.10
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  artifacts:
    needs: release
    name: Create Release Artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-musl
#          - x86_64-unknown-linux-gnu
#          - x86_64-unknown-linux-musl
#          - aarch64-unknown-linux-gnu
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    - name: Install the aarch64 toolchain
      run: |
        sudo apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
    - name: Build and Install atc-router
      env:
        TARGET: ${{ matrix.target }}
        RUSTFLAGS: '-C target-feature=-crt-static'
      run: |
        if [[ '${{matrix.target}}' == 'aarch64-unknown-linux'* ]]; then
          export RUSTFLAGS="${RUSTFLAGS} -C linker=aarch64-linux-gnu-gcc"
        fi
        make build
        find . -name 'libatc_router.*'
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
    - name: Compress and rename artifacts
      run: tar -C /tmp/build/ -czvf ${{ matrix.target }}.tar.gz .
    - name: Add Release Artifacts to the Github Release
      if: ${{ needs.release.outputs.published == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.release.outputs.release-git-tag }}
        files: ${{ matrix.target }}.tar.gz

