name: Lua lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Lint changed-files
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@04124efe7560d15e11ea2ba96c0df2989f68f1f4
        with:
          base_sha: ${{ github.event.workflow_run.head_sha }}

      - name: Generate token
        id: github-app-token
        uses: tibdex/github-app-token@021a2405c7f990db57f5eae5397423dcc554159c # v1.7.0
        with:
          app_id: ${{ vars.KONG_GH_APP_ID }}
          private_key: ${{ secrets.KONG_GH_APP_PRIVATE_KEY }}

      - name: Generate release name
        id: generate-release-name
        run:
          RELEASE_NAME=lualint_$(uname -m)-unknown-linux-gnu.zip

      - name: Download Lualint
        uses: robinraju/release-downloader@768b85c8d69164800db5fc00337ab917daf3ce68
        with:
          repository: "kong/lualint"
          token: ${{ steps.github-app-token.outputs.token }}
          latest: true
          fileName: ${{ steps.generate-release-name.outputs.RELEASE_NAME }}

      - name: Lint all changed lua files
        run: |
          unzip ${{ steps.generate-release-name.outputs.RELEASE_NAME }};
          chmod +x ./lualint;
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "found $file";
            ALL_PASSED="true";
            if [[ $file == *.lua ]]; then
              ./lualint run --rules '{
                  "max_column_width": {},
                  "one_line_before_else": {},
                  "eof_blank_line": {},
                  "table_ctor_comma": {},
                  "func_separation": {}
              }' "$file";
              if [[ $? -ne 0 ]]; then
                ALL_PASSED="false";
              fi;
            fi;
          done;

          if [[ $ALL_PASSED == "false" ]]; then
            exit 1;
          fi;
